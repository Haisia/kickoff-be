input {
	beats {
		port => 5044
	}

	tcp {
		port => 50000
	}

	# leagues 입력
	jdbc {
		jdbc_connection_string => "jdbc:postgresql://kickoff-db:5432/league_service"
		jdbc_user => "root"
		jdbc_password => "root"
		jdbc_driver_library => "/usr/share/logstash/postgresql.jar"
		jdbc_driver_class => "org.postgresql.Driver"

		statement => "
		SELECT * 
		FROM leagues 
		LEFT JOIN league_logos ON leagues.league_id = league_logos.league_id
		WHERE leagues.updated_at > :sql_last_value OR :sql_last_value IS NULL
		"
		schedule => "* * * * *"

		use_column_value => true
		tracking_column => "updated_at"
		tracking_column_type => "timestamp"
		clean_run => false
		record_last_run => true
		last_run_metadata_path => "/usr/share/logstash/.logstash_jdbc_last_run_leagues"

		# leagues 데이터를 구분하기 위한 필드 추가
		add_field => { "source_type" => "leagues" }
	}

	# seasons 입력
	jdbc {
		jdbc_connection_string => "jdbc:postgresql://kickoff-db:5432/league_service"
		jdbc_user => "root"
		jdbc_password => "root"
		jdbc_driver_library => "/usr/share/logstash/postgresql.jar"
		jdbc_driver_class => "org.postgresql.Driver"

		statement => "
		SELECT * 
		FROM seasons 
		WHERE updated_at > :sql_last_value OR :sql_last_value IS NULL
		"
		schedule => "* * * * *"

		use_column_value => true
		tracking_column => "updated_at"
		tracking_column_type => "timestamp"
		clean_run => false
		record_last_run => true
		last_run_metadata_path => "/usr/share/logstash/.logstash_jdbc_last_run_seasons"

		# seasons 데이터를 구분하기 위한 필드 추가
		add_field => { "source_type" => "seasons" }
	}
}

filter {
	# source_type 필드에 따라 처리 로직 분리
	if [source_type] == "leagues" {
		mutate {
			add_field => { "document_type" => "league_data" }
		}
	}

	if [source_type] == "seasons" {
		mutate {
			add_field => { "document_type" => "season_data" }
		}
	}

	if [source_type] == "teams" {
		mutate {
			add_field => { "document_type" => "team_data" }
		}
	}
}

output {
	stdout {
		codec => rubydebug
	}

	# leagues 데이터 출력
	if [document_type] == "league_data" {
		elasticsearch {
			hosts => ["http://elasticsearch:9200"]
			user => "elastic"
			password => "changeme"
			index => "leagues"
			document_id => "%{league_id}"
		}
	}

	# seasons 데이터 출력
	if [document_type] == "season_data" {
		elasticsearch {
			hosts => ["http://elasticsearch:9200"]
			user => "elastic"
			password => "changeme"
			index => "leagues-seasons"
			document_id => "%{league_id}-%{year}"
		}
	}
}